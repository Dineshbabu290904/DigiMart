package com.digimart.Servlet;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.sql.DataSource;

import com.digimart.project.ConnectionProvider;

public class AddToCartServlet extends HttpServlet {

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession();
        int userId = (int) session.getAttribute("user_id");
        int productId = Integer.parseInt(request.getParameter("product_id"));
        double quantity = Double.parseDouble(request.getParameter("quantity"));

        try (Connection conn = ConnectionProvider.getCon()) {
            // Check if a 'Pending' order exists for the user
            String checkOrderQuery = "SELECT order_id FROM Orders WHERE user_id = ? AND status = 'Pending'";
            PreparedStatement checkOrderStmt = conn.prepareStatement(checkOrderQuery);
            checkOrderStmt.setInt(1, userId);
            ResultSet rs = checkOrderStmt.executeQuery();

            int orderId;
            if (rs.next()) {
                orderId = rs.getInt("order_id");
            } else {
                // Create a new 'Pending' order if not exists
                String createOrderQuery = "INSERT INTO Orders (user_id, total_amount, status) VALUES (?, 0, 'Pending')";
                PreparedStatement createOrderStmt = conn.prepareStatement(createOrderQuery, PreparedStatement.RETURN_GENERATED_KEYS);
                createOrderStmt.setInt(1, userId);
                createOrderStmt.executeUpdate();
                ResultSet generatedKeys = createOrderStmt.getGeneratedKeys();
                if (generatedKeys.next()) {
                    orderId = generatedKeys.getInt(1);
                } else {
                    throw new Exception("Failed to create order.");
                }
            }

            // Get the product price
            String productQuery = "SELECT price_per_unit FROM Products WHERE product_id = ?";
            PreparedStatement productStmt = conn.prepareStatement(productQuery);
            productStmt.setInt(1, productId);
            ResultSet productRs = productStmt.executeQuery();

            if (productRs.next()) {
                double pricePerUnit = productRs.getDouble("price_per_unit");

                // Insert into Order_Items
                String addItemQuery = "INSERT INTO Order_Items (order_id, product_id, quantity, price_per_unit) VALUES (?, ?, ?, ?)";
                PreparedStatement addItemStmt = conn.prepareStatement(addItemQuery);
                addItemStmt.setInt(1, orderId);
                addItemStmt.setInt(2, productId);
                addItemStmt.setDouble(3, quantity);
                addItemStmt.setDouble(4, pricePerUnit);
                addItemStmt.executeUpdate();

                // Redirect to the cart page with a success message
                response.sendRedirect("cart.jsp?msg=added");
            } else {
                // Redirect to the cart page with a failure message (invalid product)
                response.sendRedirect("cart.jsp?msg=invalidProduct");
            }
        } catch (Exception e) {
            e.printStackTrace();
            response.sendRedirect("cart.jsp?msg=error");
        }
    }
}
