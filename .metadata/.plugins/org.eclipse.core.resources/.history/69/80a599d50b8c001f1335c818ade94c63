package com.digimart.Servlet;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import com.digimart.project.ConnectionProvider;

public class CheckoutServlet extends HttpServlet {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession();
        int userId = (int) session.getAttribute("user_id");
        int addressId = (int) session.getAttribute("address_id"); // Get address_id from session

        // Get total amount from the cart
        try (Connection conn = ConnectionProvider.getCon()) {
            String totalAmountQuery = "SELECT SUM(oi.quantity * oi.price_per_unit) AS total FROM Order_Items oi " +
                                      "JOIN Orders o ON oi.order_id = o.order_id " +
                                      "WHERE o.user_id = ? AND o.status = 'Pending'";
            PreparedStatement totalAmountStmt = conn.prepareStatement(totalAmountQuery);
            totalAmountStmt.setInt(1, userId);
            ResultSet totalAmountRs = totalAmountStmt.executeQuery();

            if (totalAmountRs.next()) {
                double totalAmount = totalAmountRs.getDouble("total");

                // Update the order with the total amount and address
                String updateOrderQuery = "UPDATE Orders SET total_amount = ?, delivery_address_id = ? WHERE user_id = ? AND status = 'Pending'";
                PreparedStatement updateOrderStmt = conn.prepareStatement(updateOrderQuery);
                updateOrderStmt.setDouble(1, totalAmount);
                updateOrderStmt.setInt(2, addressId);
                updateOrderStmt.setInt(3, userId);
                updateOrderStmt.executeUpdate();

                // Redirect to the payment page with success message
                response.sendRedirect("payment.jsp?msg=checkoutSuccess");
            } else {
                // Redirect to the checkout page with failure message (empty cart)
                response.sendRedirect("checkout.jsp?msg=emptyCart");
            }
        } catch (Exception e) {
            e.printStackTrace();
            response.sendRedirect("checkout.jsp?msg=error");
        }
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request, response);
	}

}
