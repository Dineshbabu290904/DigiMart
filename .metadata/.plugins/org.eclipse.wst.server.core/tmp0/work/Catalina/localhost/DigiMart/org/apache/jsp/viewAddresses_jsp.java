/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-10-16 23:48:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.digimart.project.ConnectionProvider;
import java.sql.*;
import javax.servlet.http.HttpSession;

public final class viewAddresses_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1729116552857L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1729116433343L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
    _jspx_imports_classes.add("com.digimart.project.ConnectionProvider");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"../error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/home-style.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\">\r\n");
      out.write("    <script src='https://kit.fontawesome.com/a076d05399.js'></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            background: linear-gradient(135deg, #96e6a1 0%, #d4fc79 100%); /* Light green gradient */\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar {\r\n");
      out.write("            background: linear-gradient(135deg, #4caf50, #b2ebf2, #ffccbc); /* Gradient navbar */\r\n");
      out.write("            padding: 10px; /* Padding around navbar */\r\n");
      out.write("            display: flex; /* Use flexbox for layout */\r\n");
      out.write("            flex-direction: column; /* Stack rows vertically */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar .navbar-top {\r\n");
      out.write("            display: flex; /* Use flexbox for the first row */\r\n");
      out.write("            justify-content: space-between; /* Space between heading and username */\r\n");
      out.write("            align-items: center; /* Center items vertically */\r\n");
      out.write("            width: 100%; /* Full width */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar h2 {\r\n");
      out.write("            color: #2c6fbb; /* Cool blue for headings */\r\n");
      out.write("            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* Shadow for depth */\r\n");
      out.write("            margin: 0; /* Remove default margin */\r\n");
      out.write("            padding: 0; /* Remove default padding */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar .user-info {\r\n");
      out.write("            color: #2c6fbb; /* Color for username */\r\n");
      out.write("            font-size: 20px; /* Font size for username */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar .navbar-links {\r\n");
      out.write("            display: flex; /* Flexbox for second row */\r\n");
      out.write("            flex-wrap: wrap; /* Allow wrapping if necessary */\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            width: 100%; /* Full width for links */\r\n");
      out.write("            margin-top: 5px; /* Space above links */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar a {\r\n");
      out.write("            color: #2c6fbb; /* Cool blue for links */\r\n");
      out.write("            text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5); /* Shadow for depth */\r\n");
      out.write("            margin: 5px 10px; /* Spacing between links */\r\n");
      out.write("            text-decoration: none; /* Remove underline */\r\n");
      out.write("            font-size: 18px; /* Larger font size */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar a:hover {\r\n");
      out.write("            text-decoration: underline; /* Underline on hover */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-container input[type=\"text\"] {\r\n");
      out.write("            padding: 8px; /* Padding inside input */\r\n");
      out.write("            border: 1px solid #ccc; /* Light gray border */\r\n");
      out.write("            border-radius: 4px; /* Rounded corners */\r\n");
      out.write("            margin-right: 5px; /* Space to the right of input */\r\n");
      out.write("            width: 200px; /* Width of search input */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-container button {\r\n");
      out.write("            padding: 8px 12px; /* Padding for button */\r\n");
      out.write("            background-color: #2c6fbb; /* Button background */\r\n");
      out.write("            color: white; /* Button text color */\r\n");
      out.write("            border: none; /* Remove border */\r\n");
      out.write("            border-radius: 4px; /* Rounded corners */\r\n");
      out.write("            cursor: pointer; /* Pointer on hover */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-container button:hover {\r\n");
      out.write("            background-color: #1e4e87; /* Darker blue on hover */\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar\">\r\n");
      out.write("        <div class=\"navbar-top\">\r\n");
      out.write("            <h2>Online Shopping</h2>\r\n");
      out.write("            <div class=\"user-info\">\r\n");
      out.write("                ");
 String username = session.getAttribute("user") != null ? session.getAttribute("user").toString() : "Guest"; 
      out.write("\r\n");
      out.write("                <a href=\"\">");
 out.println(username); 
      out.write(" <i class='fas fa-user-alt'></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"navbar-links\">\r\n");
      out.write("            <a href=\"home.jsp\">Home <i class=\"fa fa-institution\"></i></a>\r\n");
      out.write("            <a href=\"myCart.jsp\">My Cart <i class='fas fa-cart-arrow-down'></i></a>\r\n");
      out.write("            <a href=\"myOrders.jsp\">My Orders <i class='fab fa-elementor'></i></a>\r\n");
      out.write("            <a href=\"changeDetails.jsp\">Change Details <i class=\"fa fa-edit\"></i></a>\r\n");
      out.write("            <a href=\"messageUs.jsp\">Message Us <i class='fas fa-comment-alt'></i></a>\r\n");
      out.write("            <a href=\"about.jsp\">About <i class=\"fa fa-address-book\"></i></a>\r\n");
      out.write("            <a href=\"logout.jsp\">Logout <i class='fas fa-share-square'></i></a>\r\n");
      out.write("            <div class=\"search-container\">\r\n");
      out.write("            <form action=\"searchHome.jsp\" method=\"post\">\r\n");
      out.write("                <input type=\"text\" placeholder=\"Search\" name=\"Search\">\r\n");
      out.write("                <button type=\"submit\"><i class=\"fa fa-search\"></i></button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Manage Addresses</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .alert {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .table th, .table td {\r\n");
      out.write("            vertical-align: middle;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <h1 class=\"mt-5\">Manage Addresses</h1>\r\n");
      out.write("    ");

        String msg = request.getParameter("msg");
        if (msg != null) {
            if ("addressAdded".equals(msg)) {
	    
      out.write("\r\n");
      out.write("	    <div class=\"alert alert-warning\" role=\"alert\">address added. find new address below.</div>\r\n");
      out.write("    	");

	           } else if ("error".equals(msg)) {
	    
      out.write("\r\n");
      out.write("	    <div class=\"alert alert-warning\" role=\"alert\">Something went wrong! Try Again!</div>\r\n");
      out.write("	    ");

	           } else if ("orderNotFound".equals(msg)) {
	    
      out.write("\r\n");
      out.write("	    <div class=\"alert alert-warning\" role=\"alert\">Order Not Found! Retry!</div>\r\n");
      out.write("	    ");

	           } else if ("emptyCart".equals(msg)) {
	    
      out.write("\r\n");
      out.write("	    <div class=\"alert alert-warning\" role=\"alert\">Cart is Empty! Please Verify!</div>\r\n");
      out.write("	    ");

	            }
	        }
	    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

        String userId = session.getAttribute("user_id").toString();
        Connection conn = null;
        ResultSet rs = null;

        try {
            conn = ConnectionProvider.getCon();
            // Retrieve existing addresses for the user
            String selectAddressQuery = "SELECT * FROM Addresses WHERE user_id = ?";
            PreparedStatement selectAddressStmt = conn.prepareStatement(selectAddressQuery);
            selectAddressStmt.setString(1, userId);
            rs = selectAddressStmt.executeQuery();

            if (!rs.isBeforeFirst()) { // No addresses found
    
      out.write("\r\n");
      out.write("                <div class=\"alert alert-warning\" role=\"alert\">No addresses found. Please add a new address below.</div>\r\n");
      out.write("    ");

            }
            int addid = 0;
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <h2 class=\"mt-4\">Existing Addresses</h2>\r\n");
      out.write("    <table class=\"table table-striped table-bordered\">\r\n");
      out.write("        <thead class=\"thead-light\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Address ID</th>\r\n");
      out.write("                <th>Street</th>\r\n");
      out.write("                <th>City</th>\r\n");
      out.write("                <th>State</th>\r\n");
      out.write("                <th>Postal Code</th>\r\n");
      out.write("                <th>Country</th>\r\n");
      out.write("                <th>Select</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("    ");

            while (rs != null && rs.next()) {
                int addressId = rs.getInt("address_id");
                String street = rs.getString("street");
                String city = rs.getString("city");
                String state = rs.getString("state");
                String postalCode = rs.getString("postal_code");
                String country = rs.getString("country");
    
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print( addressId );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( street );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( city );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( state );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( postalCode );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( country );
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("    ");

            addid = addressId;
            }
    
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("    <h2 class=\"mt-4\">Add a New Address</h2>\r\n");
      out.write("    <form action=\"AddAddressServlet\" method=\"post\" class=\"needs-validation\" novalidate>\r\n");
      out.write("         <input type=\"hidden\" name=\"address_id\" value=\"");
      out.print( addid );
      out.write("\">\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"street\">Street</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"street\" name=\"street\" placeholder=\"Enter street\" required>\r\n");
      out.write("            <div class=\"invalid-feedback\">Please enter a street.</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"city\">City</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"city\" name=\"city\" placeholder=\"Enter city\" required>\r\n");
      out.write("            <div class=\"invalid-feedback\">Please enter a city.</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"state\">State</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"state\" name=\"state\" placeholder=\"Enter state\" required>\r\n");
      out.write("            <div class=\"invalid-feedback\">Please enter a state.</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"postal_code\">Postal Code</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"postal_code\" name=\"postal_code\" placeholder=\"Enter postal code\" required>\r\n");
      out.write("            <div class=\"invalid-feedback\">Please enter a postal code.</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"country\">Country</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"country\" name=\"country\" placeholder=\"Enter country\" required>\r\n");
      out.write("            <div class=\"invalid-feedback\">Please enter a country.</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-success\">Add Address</button>\r\n");
      out.write("    </form>\r\n");

        } catch (SQLException e) {
            e.printStackTrace();

      out.write("\r\n");
      out.write("            <div class=\"alert alert-danger\" role=\"alert\">Error retrieving addresses!</div>\r\n");

        } finally {
            if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
            if (conn != null) try { conn.close(); } catch (SQLException ignore) {}
        }

      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Optional JavaScript; choose one of the two! -->\r\n");
      out.write("<!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    // Example starter JavaScript for disabling form submissions if there are invalid fields\r\n");
      out.write("    (function () {\r\n");
      out.write("        'use strict'\r\n");
      out.write("        window.addEventListener('load', function () {\r\n");
      out.write("            var forms = document.getElementsByClassName('needs-validation')\r\n");
      out.write("            var validation = Array.prototype.filter.call(forms, function (form) {\r\n");
      out.write("                form.addEventListener('submit', function (event) {\r\n");
      out.write("                    if (form.checkValidity() === false) {\r\n");
      out.write("                        event.preventDefault()\r\n");
      out.write("                        event.stopPropagation()\r\n");
      out.write("                    }\r\n");
      out.write("                    form.classList.add('was-validated')\r\n");
      out.write("                }, false)\r\n");
      out.write("            })\r\n");
      out.write("        }, false)\r\n");
      out.write("    })();\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("<head>\r\n");
      out.write("	<style>\r\n");
      out.write("	.footer {\r\n");
      out.write("            background: linear-gradient(135deg, #4caf50, #b2ebf2, #ffccbc); /* Green to Light Blue to Light Pink */\r\n");
      out.write("            color: #2c6fbb; /* Cool blue for headings */\r\n");
      out.write("            text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5); /* Subtle shadow for depth */\r\n");
      out.write("            text-align: center; /* Center text */\r\n");
      out.write("            padding: 1px; /* Padding around footer */\r\n");
      out.write("            margin-top: auto; /* Push footer to the bottom */\r\n");
      out.write("            width: 100%; /* Full width */\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"footer\">\r\n");
      out.write("        <p>&copy; 2024 DigiMart. All rights reserved.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
