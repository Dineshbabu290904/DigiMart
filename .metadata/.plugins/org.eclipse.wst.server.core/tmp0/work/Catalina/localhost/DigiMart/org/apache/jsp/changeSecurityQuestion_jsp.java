/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-10-18 03:58:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com.digimart.project.ConnectionProvider;

public final class changeSecurityQuestion_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/changeDetailsHeader.jsp", Long.valueOf(1729223213970L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.digimart.project.ConnectionProvider");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/home-style.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\">\r\n");
      out.write("    <script src='https://kit.fontawesome.com/a076d05399.js'></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            background: linear-gradient(135deg, #96e6a1 0%, #d4fc79 100%); /* Light green gradient */\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar {\r\n");
      out.write("            background: linear-gradient(135deg, #d4fc79, #e3f2fd); /* Gradient navbar */\r\n");
      out.write("            padding: 10px; /* Padding around navbar */\r\n");
      out.write("            display: flex; /* Use flexbox for layout */\r\n");
      out.write("            flex-direction: column; /* Stack rows vertically */\r\n");
      out.write("            box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.5);\r\n");
      out.write("            margin-bottom: 10;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar .navbar-top {\r\n");
      out.write("            display: flex; /* Use flexbox for the first row */\r\n");
      out.write("            box-shadow: 4px 4px 4px rgba(0.15, 0.15, 0.15, 0.15);\r\n");
      out.write("            justify-content: space-between; /* Space between heading and username */\r\n");
      out.write("            align-items: center; /* Center items vertically */\r\n");
      out.write("            width: 100%; /* Full width */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar h2 {\r\n");
      out.write("            color: #2c6fbb; /* Cool blue for headings */\r\n");
      out.write("            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* Shadow for depth */\r\n");
      out.write("            margin-bottom: 10;\r\n");
      out.write("            margin-left: 10;\r\n");
      out.write("            padding: 10;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar .user-info {\r\n");
      out.write("            color: #2c6fbb; /* Color for username */\r\n");
      out.write("            font-size: 20px; /* Font size for username */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar .navbar-links {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            margin-top: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar a {\r\n");
      out.write("            color: #2c6fbb; /* Cool blue for links */\r\n");
      out.write("            text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5); /* Shadow for depth */\r\n");
      out.write("            margin: 5px 10px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .navbar a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-container input[type=\"text\"] {\r\n");
      out.write("            padding: 8px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            margin-right: 5px;\r\n");
      out.write("            width: 200px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-container button {\r\n");
      out.write("            padding: 8px 12px;\r\n");
      out.write("            background-color: #2c6fbb;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .search-container button:hover {\r\n");
      out.write("            background-color: #1e4e87;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar\">\r\n");
      out.write("        <div class=\"navbar-top\">\r\n");
      out.write("            <h2>Change Details <i class=\"fa fa-edit\"></i></h2>\r\n");
      out.write("            <div class=\"user-info\">\r\n");
      out.write("                ");
 String user = session.getAttribute("user") != null ? session.getAttribute("user").toString() : "Guest"; 
      out.write("\r\n");
      out.write("                <a href=\"changeDetails.jsp\">Your Profile (");
 out.println(user); 
      out.write(") <i class=\"fas fa-user-alt\"></i></a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"navbar-links\">\r\n");
      out.write("            <a href=\"home.jsp\"><i class=\"fas fa-arrow-circle-left\"></i> Back</a>\r\n");
      out.write("            <a href=\"changePassword.jsp\">Change Password <i class=\"fas fa-key\"></i></a>\r\n");
      out.write("            <a href=\"addChangeAddress.jsp\">Add or Change Address <i class=\"fas fa-map-marker-alt\"></i></a>\r\n");
      out.write("            <a href=\"changeSecurityQuestion.jsp\">Change Security Question <i class=\"fa fa-repeat\"></i></a>\r\n");
      out.write("            <a href=\"changeMobileNumber.jsp\">Change Mobile Number <i class=\"fas fa-phone\"></i></a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/changeDetails.css\">\r\n");
      out.write("    <script src='https://kit.fontawesome.com/a076d05399.js'></script>\r\n");
      out.write("    <title>Change Security Question</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");

    // Get userId from session (assuming it's stored there)
    Integer userId = (Integer) session.getAttribute("user_id");

    if (userId == null) {
        response.sendRedirect("login.jsp");
        return;
    }

    String selectedQuestion = "";
    
    // Fetch current security question from the database
    String query = "SELECT securityQuestion FROM users WHERE user_id = ?";
    try (Connection con = ConnectionProvider.getCon(); 
         PreparedStatement stmt = con.prepareStatement(query)) {
        stmt.setInt(1, userId);
        ResultSet rs = stmt.executeQuery();
        if (rs.next()) {
            selectedQuestion = rs.getString("securityQuestion");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }

      out.write('\r');
      out.write('\n');
 
    String message = request.getParameter("msg");
    if ("success".equals(message)) { 

      out.write("\r\n");
      out.write("    <h3 class=\"alert alert-success\">Your security question has been successfully changed!</h3>\r\n");
 
    } else if ("wrongPassword".equals(message)) { 

      out.write("\r\n");
      out.write("    <h3 class=\"alert alert-danger\">Your password is incorrect!</h3>\r\n");
 
    } else if ("error".equals(message)) { 

      out.write("\r\n");
      out.write("    <h3 class=\"alert alert-danger\">Something went wrong! Please try again.</h3>\r\n");
 
    } 

      out.write("\r\n");
      out.write("\r\n");
      out.write("<h3>Select Your New Security Question</h3>\r\n");
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("    <form action=\"ChangeSecurityQuestionServlet\" method=\"POST\">\r\n");
      out.write("        <select class=\"input-style\" name=\"securityQuestion\" class=\"form-control\" required>\r\n");
      out.write("            <option value=\"What was your first car?\" ");
      out.print( "What was your first car?".equals(selectedQuestion) ? "selected" : "" );
      out.write(">What was your first car?</option>\r\n");
      out.write("            <option value=\"What is the name of your first pet?\" ");
      out.print( "What is the name of your first pet?".equals(selectedQuestion) ? "selected" : "" );
      out.write(">What is the name of your first pet?</option>\r\n");
      out.write("            <option value=\"What elementary school did you attend?\" ");
      out.print( "What elementary school did you attend?".equals(selectedQuestion) ? "selected" : "" );
      out.write(">What elementary school did you attend?</option>\r\n");
      out.write("            <option value=\"What is the name of the town where you were born?\" ");
      out.print( "What is the name of the town where you were born?".equals(selectedQuestion) ? "selected" : "" );
      out.write(">What is the name of the town where you were born?</option>\r\n");
      out.write("        </select>\r\n");
      out.write("        \r\n");
      out.write("        <hr>\r\n");
      out.write("        \r\n");
      out.write("        <h3>Enter Your New Answer</h3>\r\n");
      out.write("        <input class=\"input-style\" type=\"text\" name=\"securityAnswer\" class=\"form-control\" required>\r\n");
      out.write("        \r\n");
      out.write("        <hr>\r\n");
      out.write("        \r\n");
      out.write("        <h3>Enter Password (For Security)</h3>\r\n");
      out.write("        <input class=\"input-style\" type=\"password\" name=\"password\" class=\"form-control\" required>\r\n");
      out.write("        \r\n");
      out.write("        <hr>\r\n");
      out.write("        <center>\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-primary\">\r\n");
      out.write("            <i class='far fa-arrow-alt-circle-right'></i> Change Security Question\r\n");
      out.write("        </button>\r\n");
      out.write("        </center>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
