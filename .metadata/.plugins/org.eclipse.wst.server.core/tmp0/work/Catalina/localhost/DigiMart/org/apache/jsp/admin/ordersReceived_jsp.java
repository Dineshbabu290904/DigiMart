/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-10-18 05:19:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.digimart.project.ConnectionProvider;
import java.sql.*;
import java.util.Base64;

public final class ordersReceived_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1729186277053L));
    _jspx_dependants.put("/admin/adminHeader.jsp", Long.valueOf(1729168602355L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.Base64");
    _jspx_imports_classes.add("com.digimart.project.ConnectionProvider");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"../error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/home-style.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("    <script src='https://kit.fontawesome.com/a076d05399.js'></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            background: linear-gradient(135deg, #d4fc79 0%, #96e6a1 100%); /* Light green gradient */\r\n");
      out.write("        }\r\n");
      out.write("        .navbar {\r\n");
      out.write("            background: linear-gradient(135deg, #4caf50, #b2ebf2, #ffccbc); /* Green to Light Blue to Light Pink */\r\n");
      out.write("            padding: 10px; /* Padding around navbar */\r\n");
      out.write("        }\r\n");
      out.write("        .navbar a {\r\n");
      out.write("            color: #2c6fbb; /* Cool blue for headings */\r\n");
      out.write("            text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.5); /* Subtle shadow for depth */\r\n");
      out.write("            margin: 0 15px; /* Spacing between links */\r\n");
      out.write("            text-decoration: none; /* Remove underline */\r\n");
      out.write("            font-size: 18px; /* Larger font size */\r\n");
      out.write("        }\r\n");
      out.write("        .navbar a:hover {\r\n");
      out.write("            text-decoration: underline; /* Underline on hover */\r\n");
      out.write("        }\r\n");
      out.write("        h1 {\r\n");
      out.write("            color: #2c6fbb; /* Cool blue for headings */\r\n");
      out.write("            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* Subtle shadow for depth */\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar\">\r\n");
      out.write("        <a href=\"adminHome.jsp\"><h2>Online Shopping</h2></a>\r\n");
      out.write("        <a href=\"addNewProduct.jsp\">Add New Product</a>\r\n");
      out.write("        <a href=\"allProductEditProduct.jsp\">All Products & Edit</a>\r\n");
      out.write("        <a href=\"messagesReceived.jsp\">Messages Received</a>\r\n");
      out.write("        <a href=\"ordersReceived.jsp\">Orders Received</a>\r\n");
      out.write("        <a href=\"cancelOrders.jsp\">Cancel Orders</a>\r\n");
      out.write("        <a href=\"deliveredOrders.jsp\">Delivered Orders</a>\r\n");
      out.write("        <a href=\"../logout.jsp\">Logout</a>\r\n");
      out.write("    </nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/ordersReceived-style.css\">\r\n");
      out.write("<!-- Add Bootstrap for better styling -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\">\r\n");
      out.write("<title>Orders Received</title>\r\n");
      out.write("<style>\r\n");
      out.write(".table {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 20px auto;\r\n");
      out.write("    border-collapse: separate;\r\n");
      out.write("    border-spacing: 0;\r\n");
      out.write("}\r\n");
      out.write(".table th, .table td {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    border: 1px solid #dee2e6; /* Define a solid border for cells */\r\n");
      out.write("}\r\n");
      out.write(".alert {\r\n");
      out.write("    color: red; /* Highlight alert messages in red */\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div style=\"color: white; text-align: center; font-size: 30px;\">Orders Received <i class=\"fas fa-archive\"></i></div>\r\n");

 	boolean orderCanceled = false;  // Set based on your application logic
    boolean orderUpdated = false;    // Set based on your application logic
    boolean orderError = false;      // Set based on your application logic

    // Example logic to set these variables (modify according to your actual logic)
    String action = request.getParameter("action");  // Example parameter to determine action
    if ("cancel".equals(action)) {
        orderCanceled = true;
    } else if ("update".equals(action)) {
        orderUpdated = true;
    } else if ("error".equals(action)) {
        orderError = true;
    }
    

      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("        <div class=\"header-title\">Orders Received <i class=\"fas fa-archive\"></i></div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"alert alert-success\" style=\"display: ");
      out.print( orderCanceled ? "block" : "none" );
      out.write(";\">\r\n");
      out.write("            Order Cancelled Successfully!\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"alert alert-success\" style=\"display: ");
      out.print( orderUpdated ? "block" : "none" );
      out.write(";\">\r\n");
      out.write("            Successfully Updated!\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"alert alert-danger\" style=\"display: ");
      out.print( orderError ? "block" : "none" );
      out.write(";\">\r\n");
      out.write("            Something went wrong! Try Again!\r\n");
      out.write("        </div>\r\n");
      out.write("<table class=\"table table-striped\">\r\n");
      out.write("    <thead>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>Mobile Number</th>\r\n");
      out.write("            <th>Product Name</th>\r\n");
      out.write("            <th>Quantity</th>\r\n");
      out.write("            <th><i class=\"fa fa-inr\"></i> Sub Total</th>\r\n");
      out.write("            <th>Address</th>\r\n");
      out.write("            <th>City</th>\r\n");
      out.write("            <th>State</th>\r\n");
      out.write("            <th>Country</th>\r\n");
      out.write("            <th>Order Date</th>\r\n");
      out.write("            <th>Expected Delivery Date</th>\r\n");
      out.write("            <th>Payment Method</th>\r\n");
      out.write("            <th>T-ID</th>\r\n");
      out.write("            <th>Status</th>\r\n");
      out.write("            <th>Cancel Order <i class='fas fa-window-close'></i></th>\r\n");
      out.write("            <th>Order Delivered <i class='fas fa-dolly'></i></th>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("<tbody>\r\n");
      out.write("    ");

        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;

        try {
            // Get the connection from ConnectionProvider
            con = ConnectionProvider.getCon();
            stmt = con.createStatement();

            // SQL query to fetch orders and their details including address information
            String query = "SELECT u.phone, p.name, c.quantity, "
                         + "c.updated_at, a.delivery_date, "
                         + "a.payment_method, a.transaction_id, c.status,p.price_per_unit, "
                         + "a.street_address, a.city, a.state, a.country,c.cart_id "
                         + "FROM cart c "
                         + "JOIN products p ON c.product_id = p.product_id "
                         + "JOIN users u ON c.user_id = u.user_id "
                         + "JOIN address a ON u.user_id = a.user_id";  // Join with address based on user_id

            rs = stmt.executeQuery(query);

            // Iterate over the result set to display the orders
            while (rs.next()) {
                String phone = rs.getString("phone");
                String productName = rs.getString("name");
                int quantity = rs.getInt("quantity");
                double subtotal = quantity * rs.getDouble("price_per_unit"); // Assuming price is retrieved in a joined manner
                String address = rs.getString("street_address");
                String city = rs.getString("city");
                String state = rs.getString("state");
                String country = rs.getString("country");
                String orderDate = rs.getString("updated_at");
                String expectedDeliveryDate = rs.getString("delivery_date");
                String paymentMethod = rs.getString("payment_method");
                String transactionId = rs.getString("transaction_id");
                String status = rs.getString("status");
                int cartId = rs.getInt("cart_id");
    
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print( phone != null ? phone : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( productName != null ? productName : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( quantity );
      out.write("</td>\r\n");
      out.write("                    <td><i class=\"fa fa-inr\"></i> ");
      out.print( subtotal );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( address != null ? address : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( city != null ? city : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( state != null ? state : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( country != null ? country : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( orderDate != null ? orderDate : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( expectedDeliveryDate != null ? expectedDeliveryDate : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( paymentMethod != null ? paymentMethod : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( transactionId != null ? transactionId : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( status != null ? status : "N/A" );
      out.write("</td>\r\n");
      out.write("                    <td><a href=\"CancelOrderServlet?cartId=");
      out.print( cartId );
      out.write("\">Cancel <i class='fas fa-window-close'></i></a></td>\r\n");
      out.write("                    <td><a href=\"MarkDeliveredServlet?cartId=");
      out.print( cartId );
      out.write("\">Delivered <i class='fas fa-dolly'></i></a></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("    ");

            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (rs != null) try { rs.close(); } catch (SQLException e) { e.printStackTrace(); }
            if (stmt != null) try { stmt.close(); } catch (SQLException e) { e.printStackTrace(); }
            if (con != null) try { con.close(); } catch (SQLException e) { e.printStackTrace(); }
        }
    
      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<style>\r\n");
      out.write("	.footer {\r\n");
      out.write("            background: linear-gradient(135deg,  #d4fc79, #e3f2fd); /* Gradient navbar */\r\n");
      out.write("            padding: 10px; /* Padding around navbar */\r\n");
      out.write("            box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.5);\r\n");
      out.write("            margin-bottom: 10; /* Subtle shadow for depth */\r\n");
      out.write("            text-align: center; /* Center text */\r\n");
      out.write("            padding: 1px; /* Padding around footer */\r\n");
      out.write("            margin-top: auto; /* Push footer to the bottom */\r\n");
      out.write("            width: 100%; /* Full width */\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"footer\">\r\n");
      out.write("        <p>&copy; 2024 DigiMart. All rights reserved.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
